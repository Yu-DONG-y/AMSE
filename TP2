import 'package:flutter/material.dart';
import 'package:flutter/rendering.dart';
import 'dart:math';

void main() {
  runApp(imagepad());
}

class imagepad extends StatefulWidget {
  @override
  State<StatefulWidget> createState() {
    return _image();
  }
}

int m = 2;
int f = m * m;
int p_r;
bool start;

class _image extends State<imagepad> {
  int i;

  String image_ad =
      'https://th.bing.com/th/id/R3e01782d2684792d41201a7e74de3987?rik=%2fN%2fWzn4SVCU3iw&riu=http%3a%2f%2ftao.goulew.com%2fusers%2fupfile%2f20190505%2fa7f52949-3f21-4610-b3f1-4da8535d7fe6.jpg&ehk=hkbuHs3A4uFZayRkb%2bwhHzUD26TDlmyA5mw2nU%2fsHgw%3d&risl=&pid=ImgRaw';

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Image',
      home: Center(
        child: new Column(
          children: [
            //plateau
            new Container(
              height: 300 + 1.0 * m - 1,
              width: 300 + 1.0 * m - 1,
              child: HomeContent(),
            ),
            //number button
            new Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [
                new FlatButton(
                  child: Text(
                    '-',
                    style: TextStyle(color: Colors.black),
                  ),
                  onPressed: () {
                    if (start) {
                      return null;
                    } else {
                      m--;
                      if (m < 1) {
                        m = 1;
                      }
                      setState(() {});
                    }
                  },
                  color: Colors.white,
                ),
                Text(
                  '$m',
                  textAlign: TextAlign.center,
                  style: TextStyle(
                      backgroundColor: Colors.white, color: Colors.black),
                ),
                new FlatButton(
                  child: Text(
                    '+',
                    style: TextStyle(color: Colors.black),
                  ),
                  onPressed: () {
                    if (start) {
                      return null;
                    } else {
                      m++;
                      if (m > 9) {
                        m = 9;
                      }
                      setState(() {});
                    }
                  },
                  color: Colors.white,
                ),
              ],
            ),
            //start and reset
            new Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [
                new FlatButton(
                  child: Text(
                    'start',
                    style: TextStyle(color: Colors.black),
                  ),
                  onPressed: () {
                    p_r = 1 + Random().nextInt(m * m);
                    start = true;
                    setState(() {});
                  },
                  color: Colors.white,
                ),
                new FlatButton(
                  child: Text(
                    'reset',
                    style: TextStyle(color: Colors.black),
                  ),
                  onPressed: () {
                    start = false;
                    setState(() {});
                  },
                  color: Colors.white,
                ),
              ],
            ),
          ],
        ),
      ),
    );
  }
}

class HomeContent extends StatefulWidget {
  @override
  _State createState() => _State();
}

class _State extends State<HomeContent> {
  String image_ad =
      'https://th.bing.com/th/id/R3e01782d2684792d41201a7e74de3987?rik=%2fN%2fWzn4SVCU3iw&riu=http%3a%2f%2ftao.goulew.com%2fusers%2fupfile%2f20190505%2fa7f52949-3f21-4610-b3f1-4da8535d7fe6.jpg&ehk=hkbuHs3A4uFZayRkb%2bwhHzUD26TDlmyA5mw2nU%2fsHgw%3d&risl=&pid=ImgRaw';

  double x_clip;
  double y_clip;
  var im = List<int>(f);
  int cl;

  List<Widget> _getData() {
    List<Widget> list = new List();
    for (int i = 0; i < m * m; i++) {
      if (m == 1) {
        x_clip = 0;
        y_clip = 0;
      } else {
        x_clip = -1 + im[i] % m * 2 / (m - 1);
        y_clip = -1 + im[i] ~/ m * 2 / (m - 1);
      }

      if (start) {
        if (i == p_r) {
          list.add(
            Container(
              height: 300 / m,
              width: 300 / m,
              color: Colors.white,
            ),
          );
        } else {
          list.add(GestureDetector(
            child: Container(
                height: 300 / m,
                width: 300 / m,
                child: UnconstrainedBox(
                  child: ClipRect(
                    child: Align(
                      alignment: Alignment(x_clip, y_clip),
                      heightFactor: 1 / m,
                      widthFactor: 1 / m,
                      child: Image.network(
                        '$image_ad',
                        height: 300,
                        width: 300,
                        fit: BoxFit.fill,
                      ),
                    ),
                  ),
                )),
            onTap: () {
              if (i + m == p_r ||
                  i - m == p_r ||
                  (i + 1 == p_r && i ~/ m == p_r ~/ m) ||
                  (i - 1 == p_r && i ~/ m == p_r ~/ m)) {
                cl = im[p_r];
                im[p_r] = im[i];
                im[i] = cl;
                p_r = i;
                setState(() {});
              }
            },
          ));
        }
      } else {
        for (int i = 0; i < m * m; i++) {
          im[i] = i;
        }
        if (m == 1) {
          x_clip = 0;
          y_clip = 0;
        } else {
          x_clip = -1 + im[i] % m * 2 / (m - 1);
          y_clip = -1 + im[i] ~/ m * 2 / (m - 1);
        }
        list.add(
          Container(
              height: 300 / m,
              width: 300 / m,
              child: UnconstrainedBox(
                child: ClipRect(
                  child: Align(
                    alignment: Alignment(x_clip, y_clip),
                    heightFactor: 1 / m,
                    widthFactor: 1 / m,
                    child: Image.network(
                      '$image_ad',
                      height: 300,
                      width: 300,
                      fit: BoxFit.fill,
                    ),
                  ),
                ),
              )),
        );
      }
    }
    return list;
  }

  @override
  Widget build(BuildContext context) {
    return GridView.count(
        padding: const EdgeInsets.all(0),
        crossAxisSpacing: 1,
        mainAxisSpacing: 1,
        crossAxisCount: m,
        childAspectRatio: 1,
        children: this._getData());
  }
}
